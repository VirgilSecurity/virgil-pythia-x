{"Protocols/PythiaCryptoProtocol.html#/c:@M@VirgilSDKPythia@objc(pl)VSYPythiaCryptoProtocol(im)blindWithPassword:error:":{"name":"blind(password:)","abstract":"<p>Blinds password.</p>","parent_name":"PythiaCryptoProtocol"},"Protocols/PythiaCryptoProtocol.html#/c:@M@VirgilSDKPythia@objc(pl)VSYPythiaCryptoProtocol(im)deblindWithTransformedPassword:blindingSecret:error:":{"name":"deblind(transformedPassword:blindingSecret:)","abstract":"<p>Deblinds transformed password value using previously returned blinding_secret from blind operation.</p>","parent_name":"PythiaCryptoProtocol"},"Protocols/PythiaCryptoProtocol.html#/c:@M@VirgilSDKPythia@objc(pl)VSYPythiaCryptoProtocol(im)generateKeyPairUsingSeed:error:":{"name":"generateKeyPair(usingSeed:)","abstract":"<p>Generates key pair of given type using random seed</p>","parent_name":"PythiaCryptoProtocol"},"Protocols/PythiaClientProtocol.html#/c:@M@VirgilSDKPythia@objc(pl)VSYPythiaClientProtocol(im)generateSeedWithBlindedPassword:brainKeyId:error:":{"name":"generateSeed(blindedPassword:brainKeyId:)","abstract":"<p>Generates seed using given blinded password and brainkey id</p>","parent_name":"PythiaClientProtocol"},"Protocols/PythiaClientProtocol.html":{"name":"PythiaClientProtocol","abstract":"<p>Protocol for PythiaClient</p>"},"Protocols/PythiaCryptoProtocol.html":{"name":"PythiaCryptoProtocol","abstract":"<p>Crypto operations needed for Pythia BrainKey</p>"},"Enums/PythiaCryptoError.html#/c:@M@VirgilSDKPythia@E@VSYPythiaCryptoError@VSYPythiaCryptoErrorPasswordIsNotUTF8":{"name":"passwordIsNotUTF8","abstract":"<p>Undocumented</p>","parent_name":"PythiaCryptoError"},"Enums/PythiaCryptoError.html#/s:15VirgilSDKPythia17PythiaCryptoErrorO16errorDescriptionSSSgvp":{"name":"errorDescription","abstract":"<p>Human-readable localized description</p>","parent_name":"PythiaCryptoError"},"Enums/PythiaClientError.html#/c:@M@VirgilSDKPythia@E@VSYPythiaClientError@VSYPythiaClientErrorConstructingUrl":{"name":"constructingUrl","abstract":"<p>Undocumented</p>","parent_name":"PythiaClientError"},"Enums/PythiaClientError.html#/s:15VirgilSDKPythia17PythiaClientErrorO16errorDescriptionSSSgvp":{"name":"errorDescription","abstract":"<p>Human-readable localized description</p>","parent_name":"PythiaClientError"},"Enums/PythiaClientError.html":{"name":"PythiaClientError","abstract":"<p>Declares client error types and codes</p>"},"Enums/PythiaCryptoError.html":{"name":"PythiaCryptoError","abstract":"<p>Declares crypto error types and codes</p>"},"Classes/PythiaCrypto.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaCrypto(py)crypto":{"name":"crypto","abstract":"<p>Virgil Crypto</p>","parent_name":"PythiaCrypto"},"Classes/PythiaCrypto.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaCrypto(cpy)initQueue":{"name":"initQueue","abstract":"<p>Undocumented</p>","parent_name":"PythiaCrypto"},"Classes/PythiaCrypto.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaCrypto(cpy)instanceCount":{"name":"instanceCount","abstract":"<p>Undocumented</p>","parent_name":"PythiaCrypto"},"Classes/PythiaCrypto.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaCrypto(im)initWithCrypto:error:":{"name":"init(crypto:)","abstract":"<p>Undocumented</p>","parent_name":"PythiaCrypto"},"Classes/PythiaCrypto.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaCrypto(im)blindWithPassword:error:":{"name":"blind(password:)","abstract":"<p>Blinds password.</p>","parent_name":"PythiaCrypto"},"Classes/PythiaCrypto.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaCrypto(im)deblindWithTransformedPassword:blindingSecret:error:":{"name":"deblind(transformedPassword:blindingSecret:)","abstract":"<p>Deblinds transformed password value using previously returned blinding_secret from blind operation.</p>","parent_name":"PythiaCrypto"},"Classes/PythiaCrypto.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaCrypto(im)generateKeyPairUsingSeed:error:":{"name":"generateKeyPair(usingSeed:)","abstract":"<p>Generates key pair of given type using random seed</p>","parent_name":"PythiaCrypto"},"Classes/BlindResult.html#/c:@M@VirgilSDKPythia@objc(cs)VSYBlindResult(py)blindedPassword":{"name":"blindedPassword","abstract":"<p>G1 password obfuscated into a pseudo-random string.</p>","parent_name":"BlindResult"},"Classes/BlindResult.html#/c:@M@VirgilSDKPythia@objc(cs)VSYBlindResult(py)blindingSecret":{"name":"blindingSecret","abstract":"<p>BN random value used to blind user&rsquo;s password.</p>","parent_name":"BlindResult"},"Classes/PythiaServiceError.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaServiceError(py)httpStatusCode":{"name":"httpStatusCode","abstract":"<p>Http status code</p>","parent_name":"PythiaServiceError"},"Classes/PythiaServiceError.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaServiceError(py)rawServiceError":{"name":"rawServiceError","abstract":"<p>Recieved and decoded <code>RawServiceError</code></p>","parent_name":"PythiaServiceError"},"Classes/PythiaServiceError.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaServiceError(im)initWithHttpStatusCode:rawServiceError:":{"name":"init(httpStatusCode:rawServiceError:)","abstract":"<p>Initializer</p>","parent_name":"PythiaServiceError"},"Classes/PythiaServiceError.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaServiceError(cpy)errorDomain":{"name":"errorDomain","abstract":"<p>Error domain or Error instances thrown from Service</p>","parent_name":"PythiaServiceError"},"Classes/PythiaServiceError.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaServiceError(py)errorCode":{"name":"errorCode","abstract":"<p>Code of error</p>","parent_name":"PythiaServiceError"},"Classes/PythiaServiceError.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaServiceError(py)errorUserInfo":{"name":"errorUserInfo","abstract":"<p>Provides info about the error. Error message can be recieve by NSLocalizedDescriptionKey</p>","parent_name":"PythiaServiceError"},"Classes/PythiaClient.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaClient(cpy)defaultURL":{"name":"defaultURL","abstract":"<p>Default URL for service</p>","parent_name":"PythiaClient"},"Classes/PythiaClient.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaClient(cpy)serviceErrorDomain":{"name":"serviceErrorDomain","abstract":"<p>Error domain for Error instances thrown from service</p>","parent_name":"PythiaClient"},"Classes/PythiaClient.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaClient(im)initWithAccessTokenProvider:":{"name":"init(accessTokenProvider:)","abstract":"<p>Initializes new <code>PythiaClient</code> instance</p>","parent_name":"PythiaClient"},"Classes/PythiaClient.html#/c:@M@VirgilSDKPythia@objc(cs)VSYPythiaClient(im)initWithAccessTokenProvider:serviceUrl:":{"name":"init(accessTokenProvider:serviceUrl:)","abstract":"<p>Initializes new <code>PythiaClient</code> instance</p>","parent_name":"PythiaClient"},"Classes/PythiaClient.html#/s:15VirgilSDKPythia12PythiaClientC19accessTokenProvider10serviceUrl10connection11retryConfigAC0A3SDK06AccessfG0_p_10Foundation3URLVAH22HttpConnectionProtocol_pSgAH15ExpBackoffRetryC0L0Vtcfc":{"name":"init(accessTokenProvider:serviceUrl:connection:retryConfig:)","abstract":"<p>Initializes new <code>PythiaClient</code> instance</p>","parent_name":"PythiaClient"},"Classes/PythiaClient.html#/c:@CM@VirgilSDKPythia@objc(cs)VSYPythiaClient(im)generateSeedWithBlindedPassword:brainKeyId:error:":{"name":"generateSeed(blindedPassword:brainKeyId:)","abstract":"<p>Generates seed using given blinded password and brainkey id</p>","parent_name":"PythiaClient"},"Classes/BrainKeyContext.html#/c:@M@VirgilSDKPythia@objc(cs)VSYBrainKeyContext(py)client":{"name":"client","abstract":"<p>PythiaClientProtocol implementation</p>","parent_name":"BrainKeyContext"},"Classes/BrainKeyContext.html#/c:@M@VirgilSDKPythia@objc(cs)VSYBrainKeyContext(py)pythiaCrypto":{"name":"pythiaCrypto","abstract":"<p>PythiaCryptoProtocol implementation</p>","parent_name":"BrainKeyContext"},"Classes/BrainKeyContext.html#/c:@M@VirgilSDKPythia@objc(cs)VSYBrainKeyContext(im)initWithClient:pythiaCrypto:keyPairType:error:":{"name":"init(client:pythiaCrypto:keyPairType:)","abstract":"<p>Initializer</p>","parent_name":"BrainKeyContext"},"Classes/BrainKeyContext.html#/c:@M@VirgilSDKPythia@objc(cs)VSYBrainKeyContext(cm)makeContextWithAccessTokenProvider:error:":{"name":"makeContext(accessTokenProvider:)","abstract":"<p>Fabric method to create context</p>","parent_name":"BrainKeyContext"},"Classes/BrainKey.html#/c:@M@VirgilSDKPythia@objc(cs)VSYBrainKey(py)client":{"name":"client","abstract":"<p>PythiaClientProtocol implementation</p>","parent_name":"BrainKey"},"Classes/BrainKey.html#/c:@M@VirgilSDKPythia@objc(cs)VSYBrainKey(py)pythiaCrypto":{"name":"pythiaCrypto","abstract":"<p>PythiaCryptoProtocol implementation</p>","parent_name":"BrainKey"},"Classes/BrainKey.html#/c:@M@VirgilSDKPythia@objc(cs)VSYBrainKey(im)initWithContext:":{"name":"init(context:)","abstract":"<p>Initializer</p>","parent_name":"BrainKey"},"Classes/BrainKey.html#/s:15VirgilSDKPythia8BrainKeyC08generateD4Pair8password05brainD2Id0A3SDK16GenericOperationCy0A6Crypto0adF0CGSS_SSSgtF":{"name":"generateKeyPair(password:brainKeyId:)","abstract":"<p>Generates key pair based on given password and brainkeyId</p>","parent_name":"BrainKey"},"Classes/BrainKey.html#/c:@CM@VirgilSDKPythia@objc(cs)VSYBrainKey(im)generateKeyPairWithPassword:brainKeyId:completion:":{"name":"generateKeyPair(password:brainKeyId:completion:)","abstract":"<p>Generates key pair based on given password and brainkeyId</p>","parent_name":"BrainKey"},"Classes/BrainKey.html":{"name":"BrainKey","abstract":"<p>Class for Pythia BrainKey</p>"},"Classes/BrainKeyContext.html":{"name":"BrainKeyContext","abstract":"<p>Context with dependencies needed for BrainKey</p>"},"Classes/PythiaClient.html":{"name":"PythiaClient","abstract":"<p>Class representing operations with Virgil Cards service</p>"},"Classes/PythiaServiceError.html":{"name":"PythiaServiceError","abstract":"<p>Represent card service error</p>"},"Classes/BlindResult.html":{"name":"BlindResult","abstract":"<p>Result of Pythia blind operation</p>"},"Classes/PythiaCrypto.html":{"name":"PythiaCrypto","abstract":"<p>Implementation of PythiaCryptoProtocol using Virgil crypto library</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}